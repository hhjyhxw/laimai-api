<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.icloud.modules.lm.dao.LmGroupShopMapper">


    <!-- 基础map -->
    <resultMap type="com.icloud.modules.lm.entity.LmGroupShop" id="BaseResultMap">
     <id property="id" column="id"/>
     <result property="spuId" column="spu_id"/>
     <result property="minPrice" column="min_price"/>
     <result property="maxPrice" column="max_price"/>
     <result property="start" column="start"/>
     <result property="end" column="end"/>
     <result property="minimumNumber" column="minimum_number"/>
     <result property="alreadyBuyNumber" column="already_buy_number"/>
     <result property="automaticRefund" column="automatic_refund"/>
     <result property="status" column="status"/>
     <result property="createdBy" column="created_by"/>
     <result property="createdTime" column="created_time"/>
     <result property="updatedBy" column="updated_by"/>
     <result property="updatedTime" column="updated_time"/>
    </resultMap>

   <!-- 基础字段列 -->
   <sql id="Base_Column_List" >
id,spu_id,min_price,max_price,start,end,minimum_number,already_buy_number,automatic_refund,status,created_by,created_time,updated_by,updated_time
    </sql>


<select id="queryMixList" resultMap="BaseResultMap">
select * from lm_group_shop t
<where>
<if test="id != null">
    and t.id = #{id}
</if>
<if test="spu_id != null">
    and t.spu_id = #{spu_id}
</if>
<if test="min_price != null">
    and t.min_price = #{min_price}
</if>
<if test="max_price != null">
    and t.max_price = #{max_price}
</if>
<if test="start != null">
    and t.start = #{start}
</if>
<if test="end != null">
    and t.end = #{end}
</if>
<if test="minimum_number != null">
    and t.minimum_number = #{minimum_number}
</if>
<if test="already_buy_number != null">
    and t.already_buy_number = #{already_buy_number}
</if>
<if test="automatic_refund != null">
    and t.automatic_refund = #{automatic_refund}
</if>
<if test="status != null">
    and t.status = #{status}
</if>
<if test="created_by != null">
    and t.created_by = #{created_by}
</if>
<if test="created_time != null">
    and t.created_time = #{created_time}
</if>
<if test="updated_by != null">
    and t.updated_by = #{updated_by}
</if>
</where>
</select>

    <select id="getGroupShopPage" resultType="com.icloud.modules.lm.dto.goods.GroupShopDTO">
        SELECT
        g.id,
        g.spu_id as spuId,
        g.gmt_start as gmtStart,
        g.gmt_end as gmtEnd,
        g.min_price as minPrice,
        g.max_price as maxPrice,
        g.minimum_number as minimumNumber,
        g.already_buy_number as alreadyBuyNumber,
        g.automatic_refund as automaticRefund,
        g.`status`,
        g.updated_time as updatedTime,
        g.created_time as createdTime,
        s.original_price as originalPrice,
        s.price as price,
        s.vip_price as vipPrice,
        s.title,
        s.sales,
        s.img,
        s.unit
        FROM
        lm_group_shop AS g
        LEFT JOIN
        lm_spu as s on s.id = g.spu_id
        WHERE
        g.`status` = 1
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="detail" resultType="com.icloud.modules.lm.dto.goods.GroupShopDTO">
        SELECT
        g.id,
        g.spu_id as spuId,
        g.gmt_start as gmtStart,
        g.gmt_end as gmtEnd,
        g.min_price as minPrice,
        g.max_price as maxPrice,
        g.minimum_number as minimumNumber,
        g.already_buy_number as alreadyBuyNumber,
        g.automatic_refund as automaticRefund,
        g.`status`,
        g.updated_time as updatedTime,
        g.created_time as createdTime,
        s.original_price as originalPrice,
        s.price as price,
        s.vip_price as vipPrice,
        s.title,
        s.sales,
        s.img,
        s.unit
        FROM
        lm_group_shop AS g
        LEFT JOIN
        lm_spu as s on s.id = g.spu_id
        WHERE g.id = #{id}
    </select>

    <update id="incCurrentNum">
        UPDATE lm_group_shop SET already_buy_number = already_buy_number + #{num} WHERE id = #{id}
    </update>
</mapper>